{"version":3,"sources":["components/Header.js","components/GameContext.js","components/Card.js","components/Catagory.js","components/Board.js","components/Score.js","components/Timer.js","components/Footer.js","App.js","index.js"],"names":["Header","className","GameContext","React","createContext","GameProvider","children","useState","timer","setTimer","hasSkip","setHasSkip","question","options","answer","catagory","value","currQuestion","setCurrQuestion","score","setScore","setTimerState","s","updateScore","n","Provider","Card","props","selected","setSelected","attempted","setAttempted","game","useContext","q","onClick","Catagory","questionLst","setQuestions","isLoaded","setLoaded","useEffect","fetch","title","headers","then","res","json","result","questions","error","cards","slice","map","setQuestion","Board","defaultQ","showCorrect","setShowCorrect","showInCorrect","setShowInCorrect","returnToBoard","cols","catagories","c","opts","opt","i","hidden","type","style","color","defaultProps","numQuestions","Score","Timer","align","date","Date","now","renderer","hours","minutes","seconds","completed","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.296249af.chunk.js","sourcesContent":["\nconst Header = () => {\n    \n    \n    return (\n        <header>\n            <h1 className=\"header\">Lets play Trivia!</h1>\n        </header>\n    );\n}\n\nexport default Header","import React, { useState } from \"react\";\n\nconst GameContext = React.createContext();\n\nconst GameProvider = ({children}) => {\n  const [timer, setTimer] = useState(\"ready\");\n  const [hasSkip, setHasSkip] = useState(true); \n  const [currQuestion, setCurrQuestion] = useState({question: \"\", options: [], answer: 0, catagory: \"\", value: 0}); \n  const [score, setScore] = useState(0); \n\n  const updateScore = (n) => {setScore(score + n)}\n\n  const setTimerState = (s) => {\n    if (s === \"start\"){\n      setTimer(s)\n    } else if (s === \"finished\"){\n      setTimer(s)\n    } else {\n      setTimer(\"ready\")\n    }\n  }\n\n  const value = {timer, setTimerState, hasSkip, setHasSkip, currQuestion, setCurrQuestion, score, updateScore};\n\n  return <GameContext.Provider value={value}>{children}</GameContext.Provider>\n}\n\n\nexport {GameProvider, GameContext};","import React, { useState, useContext } from 'react';\nimport {GameContext} from './GameContext'\n\nconst Card = (props) => {\n\n  const [selected, setSelected] = useState(false);\n  const [attempted, setAttempted] = useState(false);\n  \n  const game  = useContext(GameContext);\n\n  const selectCard = () => {\n    setSelected(true);\n    game.setCurrQuestion(props.q);\n    setAttempted(true);\n\n    /* start timer */\n    game.setTimerState(\"start\");\n  }\n\n  if (!selected & !attempted){\n    return (\n      <div className={props.q.catagory + \" card scoreCard clickable\"} onClick={() => selectCard()}>\n        <div className=\"card-title value\">{props.q.value}</div>\n      </div>);\n  } else {\n    return (\n      <div className={props.q.catagory + \" card scoreCard attempted\"}>\n        <div className=\"card-title value\">{props.q.value}</div>\n      </div>);\n  }\n}\n\nexport default Card","import Card from './Card'\nimport React,{ useEffect, useState } from 'react'\n\nconst Catagory = (props) => {\n    \n    const [questionLst, setQuestions] = useState([]);\n    const [isLoaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        fetch('questionDB/'+ props.title + '.json',\n        {headers : {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n            }})\n            .then(res =>res.json())\n            .then((result) => {\n                setQuestions(result.questions);\n                setLoaded(true);\n            },\n            (error) => {\n                setLoaded(true);\n            })}, [])\n\n    if (isLoaded){\n        const cards = questionLst.slice(0,4).map((q) =>\n            <Card q={q}\n                setQuestion={props.setQuestion}/>\n        );\n\n        return (<div className=\"card-column mx-auto catagory\">\n                    <div className={props.title + \" titleCard card\"}><span>{props.title}</span></div>  \n                    {cards}\n                </div>\n        );\n    } else {\n        return (<div className=\"card-column mx-auto catagory\">\n                    <div className={props.title + \" titleCard card\"}><h2>{props.title}</h2></div>  \n                    <p>loading the  questions...</p>\n            </div>);\n    }\n}\n    \nexport default Catagory","import Catagory from './Catagory'\nimport React, { useState, useContext } from 'react';\nimport {GameContext} from './GameContext'\n\nconst Board = (props) => {\n    const defaultQ = {question: \"\", options: [], answer: 0, catagory: \"\", value: 0}\n    \n    \n    const [showCorrect, setShowCorrect] = useState(false);\n    const [showInCorrect, setShowInCorrect] = useState(false);\n\n    const [selected, setSelected] = useState(\"\");\n\n    const game  = useContext(GameContext);\n\n    const setQuestion = (q) => {\n      game.setCurrQuestion(q);\n    }\n\n    const updateScore = (answer) => {\n      game.setTimerState(\"ready\");\n        if  (answer === game.currQuestion.answer){\n          game.updateScore(game.currQuestion.value);\n          setShowCorrect(true);\n        } else {\n          game.updateScore(-game.currQuestion.value);\n          setSelected(game.currQuestion.options[answer])\n          setShowInCorrect(true);\n        }\n      }\n    \n    const returnToBoard = () => {\n        setSelected(\"\");\n        setShowCorrect(false);\n        setShowInCorrect(false);\n        game.setCurrQuestion(defaultQ);\n    }\n\n    const cols = props.catagories.map((c) =>\n            <Catagory key={c} title={c} updateScore={props.updateScore} setQuestion={setQuestion}/>\n    );\n\n    const opts = game.currQuestion.options.map((opt, i) =>\n        <li className=\"option\" onClick={()=>updateScore(i)}><h2>{opt}</h2> </li>\n    );\n\n    return (\n        <div className=\"board\">\n            <div className={\"question mx-auto \" + game.currQuestion.catagory} hidden={game.currQuestion.question == \"\"}>\n                <h1>{game.currQuestion.question}</h1>\n                <ol hidden={showCorrect || showInCorrect} type=\"a\" className=\"options\">\n                  {opts}\n                </ol>\n                <div className=\"answer\" hidden={!showCorrect}>\n                  <h2>{game.currQuestion.options[game.currQuestion.answer]} is <span style={{color:\"darkgreen\"}}>correct</span>!</h2>\n                  <div className=\"back\">\n                    <button className=\"btn btn-light back\" onClick={()=>returnToBoard()}>continue</button>\n                  </div>\n                </div>\n                <div className=\"answer\" hidden={!showInCorrect}>\n                    <h2 > {selected} is <span style={{color:\"darkred\"}}>incorrect</span></h2>\n                    <h2>The correct answer was {game.currQuestion.options[game.currQuestion.answer]}</h2>\n                    <div className=\"back\">\n                      <button className=\"btn btn-light\" onClick={()=>returnToBoard()}>continue</button>\n                    </div>\n                </div>\n            </div>\n                <div className=\"card-deck mx-auto\" hidden={!game.currQuestion.question == \"\"}>\n                    {cols}\n                </div>\n            </div>\n        );\n}\n\nBoard.defaultProps = {\n    catagories: [\"sports\", \"science\", \"music\", \"nature\"],\n    numQuestions: 4\n}\n\nexport default Board","import { useContext } from \"react\";\nimport { GameContext } from \"./GameContext\";\n\nconst Score = (props) => {\n  const game  = useContext(GameContext);\n\n  var color = \"black\";\n  if (game.score < 0){\n    color = \"red\";\n  } else if (game.score > 0){\n    color = \"green\";\n  }\n  return (\n      <div className=\"score\">\n          <span  style={{color: color }}>Score: {game.score}</span>\n      </div>\n  );\n}\n\nexport default Score","import { useContext } from \"react\";\nimport Countdown from \"react-countdown\";\nimport { GameContext } from \"./GameContext\";\n\nconst Timer = () => {\n  const game  = useContext(GameContext);\n\n  const renderer =  ({hours, minutes, seconds, completed}) => {\n    if (completed){\n      game.setTimerState(\"ready\");\n      game.updateScore(-game.currQuestion.value);\n      game.setCurrQuestion({question: \"\", options: [], answer: 0, catagory: \"\", value: 0})\n      return <span></span>;\n    } else if (game.timer === \"start\") {\n      return <span className=\"time\">Time left: {seconds}s</span>;\n    } else {\n      game.setTimerState(\"ready\");\n      return <span></span>;\n    }\n  } \n\n  return (\n    <div className=\"timer\" align=\"right\">\n      <Countdown \n        date={Date.now() + 60000}\n        renderer={renderer}/>\n    </div>);\n}\n\nexport default Timer","import Score from './Score'\nimport Timer from './Timer'\n\nconst Footer = (props) => {\n    \n    return (\n        <footer className=\"container\">\n            <div className=\"row mx-auto\">\n                <Score score={props.score}/>\n                <Timer />\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer","import Header from './components/Header'\nimport Board from './components/Board'\nimport Footer from './components/Footer'\nimport {GameProvider} from './components/GameContext'\n\nimport React, { useState } from 'react';\n\nconst App = () => {\n  const [score, setScore] = useState(0); \n  const updateScore = (n) => {setScore(score + n)}\n\n  \n\n  return (\n    <GameProvider>\n      <div className=\"game\">\n        <Header />\n        <Board updateScore={updateScore}/>\n        <Footer score={score}/>\n      </div>\n    </GameProvider>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}