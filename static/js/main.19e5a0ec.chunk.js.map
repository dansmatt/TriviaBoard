{"version":3,"sources":["components/Header.js","components/GameContext.js","components/Card.js","components/Catagory.js","components/Board.js","components/Score.js","components/Timer.js","components/Footer.js","App.js","index.js"],"names":["Header","title","className","GameContext","React","createContext","GameProvider","children","useState","timer","setTimer","hasSkip","setHasSkip","question","options","answer","catagory","value","currQuestion","setCurrQuestion","score","setScore","allRight","setAllRight","numAnswered","setNumAnswered","setTimerState","s","updateScore","n","updateNumAnswered","Provider","Card","props","selected","setSelected","attempted","setAttempted","game","useContext","q","onClick","Catagory","questionLst","setQuestions","isLoaded","setLoaded","useEffect","fetch","headers","then","res","json","result","questions","error","cards","slice","numQuestions","map","Board","totalQuestions","catagories","length","defaultQ","showCorrect","setShowCorrect","showInCorrect","setShowInCorrect","selectedOption","setSelectedOption","returnToBoard","cols","c","opts","opt","i","hidden","type","style","color","window","location","reload","Score","Timer","time","Date","now","key","setKey","align","date","renderer","hours","minutes","seconds","completed","timerState","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19e5a0ec.chunk.js","sourcesContent":["\nconst Header = ({title}) => {\n    return (\n        <header>\n            <h1 className=\"header\">{title}</h1>\n        </header>\n    );\n}\n\nexport default Header","import React, { useState } from \"react\";\n\nconst GameContext = React.createContext();\n\nconst GameProvider = ({children}) => {\n  const [timer, setTimer] = useState(\"ready\");\n  const [hasSkip, setHasSkip] = useState(true); \n  const [currQuestion, setCurrQuestion] = useState({question: \"\", options: [], answer: 0, catagory: \"\", value: 0}); \n  const [score, setScore] = useState(0); \n  const [allRight, setAllRight] = useState(true);\n  const [numAnswered, setNumAnswered] = useState(0); \n\n  const updateScore = (n) => {setScore(score + n)}\n  const updateNumAnswered = (n) => {setNumAnswered(numAnswered + n)}\n\n  const setTimerState = (s) => {\n    if (s === \"start\"){\n      setTimer(s)\n    } else if (s === \"finished\"){\n      setTimer(s)\n    } else {\n      setTimer(\"ready\")\n    }\n  }\n\n  const value = {timer, setTimerState, \n                hasSkip, setHasSkip, \n                currQuestion, setCurrQuestion, \n                score, updateScore,\n                allRight, setAllRight,\n                numAnswered, updateNumAnswered};\n\n  return <GameContext.Provider value={value}>{children}</GameContext.Provider>\n}\n\n\nexport {GameProvider, GameContext};","import React, { useState, useContext } from 'react';\nimport {GameContext} from './GameContext'\n\nconst Card = (props) => {\n\n  const [selected, setSelected] = useState(false);\n  const [attempted, setAttempted] = useState(false);\n  \n  const game  = useContext(GameContext);\n\n  const selectCard = () => {\n    setSelected(true);\n    setAttempted(true);\n\n    game.setCurrQuestion(props.q);\n    game.setTimerState(\"start\");\n  }\n\n  if (!selected & !attempted){\n    return (\n      <div className={props.q.catagory + \" card scoreCard clickable\"} onClick={() => selectCard()}>\n        <div className=\"card-title value\">{props.q.value}</div>\n      </div>);\n  } else {\n    return (\n      <div className={props.q.catagory + \" card scoreCard attempted\"}>\n        <div className=\"card-title value\">{props.q.value}</div>\n      </div>);\n  }\n}\n\nexport default Card","import Card from './Card'\nimport React,{ useEffect, useState } from 'react'\n\nconst Catagory = (props) => {\n    \n    const [questionLst, setQuestions] = useState([]);\n    const [isLoaded, setLoaded] = useState(false);\n\n    /* get questions for this catagory*/\n    useEffect(() => {\n        fetch('questionDB/'+ props.title + '.json',\n        {headers : {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n            }})\n            .then(res =>res.json())\n            .then((result) => {\n                setQuestions(result.questions);\n                setLoaded(true);\n            },\n            (error) => {\n                setLoaded(true);\n            })\n        }, [])\n\n    if (isLoaded){\n        const cards = questionLst.slice(0, props.numQuestions).map((q) => <Card q={q}/>);\n\n        return (<div className=\"card-column mx-auto catagory\">\n                    <div className={props.title + \" titleCard card\"}><span>{props.title}</span></div>  \n                    {cards}\n                </div>\n        );\n    } else {\n        return (<div className=\"card-column mx-auto catagory\">\n                    <div className={props.title + \" titleCard card\"}><h2>{props.title}</h2></div>  \n                    <p>loading the  questions...</p>\n                </div>);\n    }\n}\n    \nexport default Catagory","import Catagory from './Catagory'\nimport React, { useState, useContext } from 'react';\nimport {GameContext} from './GameContext'\n\nconst Board = (props) => {\n    const totalQuestions = props.numQuestions * props.catagories.length;\n    const defaultQ = {question: \"\", options: [], answer: 0, catagory: \"\", value: 0};\n    \n    const [showCorrect, setShowCorrect] = useState(false);\n    const [showInCorrect, setShowInCorrect] = useState(false);\n    const [selectedOption, setSelectedOption] = useState(\"\");\n\n    const game  = useContext(GameContext);\n\n    const updateScore = (answer) => {\n      game.setTimerState(\"ready\");\n        if  (answer === game.currQuestion.answer){\n          game.updateScore(game.currQuestion.value);\n          setShowCorrect(true);\n        } else {\n          game.updateScore(-game.currQuestion.value);\n          game.setAllRight(false);\n          setSelectedOption(game.currQuestion.options[answer])\n          setShowInCorrect(true);\n        }\n      }\n    \n    const passQuestion = () => {\n      setSelectedOption(\"\");\n      setShowCorrect(false);\n      setShowInCorrect(false);\n      game.setCurrQuestion(defaultQ);\n      game.setHasSkip(false);\n      game.updateNumAnswered(1);\n    }\n\n    const returnToBoard = () => {\n        setSelectedOption(\"\");\n        setShowCorrect(false);\n        setShowInCorrect(false);\n        game.setCurrQuestion(defaultQ);\n        game.updateNumAnswered(1);\n    }\n\n    const cols = props.catagories.map((c) =>\n        <Catagory key={c} title={c} numQuestions={props.numQuestions}/>\n    );\n\n    const opts = game.currQuestion.options.map((opt, i) =>\n        <li className=\"option\" onClick={()=>updateScore(i)}><h2>{opt}</h2> </li>\n    );\n    if (game.numAnswered !== totalQuestions){\n      return (\n        <div className=\"board\">\n            <div className={\"question mx-auto \" + game.currQuestion.catagory} hidden={game.currQuestion.question == \"\"}>\n                <h1>{game.currQuestion.question}</h1>\n                <div hidden={showCorrect || showInCorrect}>\n                  <div>\n                    <ol type=\"a\" className=\"options\">\n                      {opts}\n                    </ol>\n                  </div>\n                  <button className=\"btn btn-primary\" hidden={!game.hasSkip} onClick={()=>passQuestion()}>PASS</button>\n                </div>\n                <div className=\"answer\" hidden={!showCorrect}>\n                  <h2>{game.currQuestion.options[game.currQuestion.answer]} is <span style={{color:\"darkgreen\"}}>correct</span>!</h2>\n                  <button className=\"btn btn-primary\" onClick={()=>returnToBoard()}>continue</button>\n                </div>\n                <div className=\"answer\" hidden={!showInCorrect}>\n                    <h2 > {selectedOption} is <span style={{color:\"darkred\"}}>incorrect</span></h2>\n                    <h2>The correct answer was {game.currQuestion.options[game.currQuestion.answer]}</h2>\n                    <button className=\"btn btn-primary\" onClick={()=>returnToBoard()}>continue</button>\n                </div>\n            </div>\n            <div className=\"card-deck mx-auto\" hidden={!game.currQuestion.question == \"\"}>\n                {cols}\n            </div>\n        </div>);\n        } else{\n          if (game.allRight){\n            return (<div className=\"board\">\n                <h1 className=\"result\">You won!</h1>\n                <button className=\"btn btn-primary\" onClick={()=>(window.location.reload())}>Restart</button>\n              </div>);\n          } else {\n            return (<div className=\"board\"><h1 className=\"result\">You can do better next time!</h1>\n                <button className=\"btn btn-primary\" onClick={()=>(window.location.reload())}>Restart</button>\n              </div>);\n          }\n          \n        }\n}\n\nexport default Board","import { useContext } from \"react\";\nimport { GameContext } from \"./GameContext\";\n\nconst Score = (props) => {\n  const game  = useContext(GameContext);\n\n  var color = \"black\";\n  if (game.score < 0){\n    color = \"red\";\n  } else if (game.score > 0){\n    color = \"green\";\n  }\n  return (\n      <div className=\"score\">\n          <span  style={{color: color }}>Score: {game.score}</span>\n      </div>\n  );\n}\n\nexport default Score","import { useContext, useState } from \"react\";\nimport Countdown from \"react-countdown\";\nimport { GameContext } from \"./GameContext\";\n\nconst Timer = ({time}) => {\n  const game  = useContext(GameContext);\n\n  const [key, setKey] = useState(Date.now());\n\n  const renderer =  ({hours, minutes, seconds, completed}) => {\n    if (completed && (game.timerState == \"start\")){\n      game.setTimerState(\"ready\");\n      game.updateScore(-game.currQuestion.value);\n      game.setAllRight(false);\n      game.setCurrQuestion({question: \"\", options: [], answer: 0, catagory: \"\", value: 0});\n      setKey(Date.now());\n      return <span></span>;\n    } else if (game.timer === \"start\") {\n      return <span className=\"time\">Time left: {seconds}s</span>;\n    } else {\n      game.setTimerState(\"ready\");\n      return <span></span>;\n    }\n  } \n\n  return (\n    <div className=\"timer\" align=\"right\">\n      <Countdown \n        key={key}\n        date={Date.now() + time}\n        renderer={renderer}/>\n    </div>);\n}\n\nexport default Timer","import Score from './Score'\nimport Timer from './Timer'\n\nconst Footer = (props) => {\n    \n    return (\n        <footer className=\"container\">\n            <div className=\"row mx-auto\">\n                <Score />\n                <Timer time={60000}/>\n            </div>\n        </footer>\n    );\n}\n\nexport default Footer","import Header from './components/Header'\nimport Board from './components/Board'\nimport Footer from './components/Footer'\nimport {GameProvider} from './components/GameContext'\n\nimport React, { useState } from 'react';\n\nconst App = () => {\n  return (\n    <GameProvider>\n      <div className=\"game\">\n        <Header title=\"Lets play Trivia!\" />\n        <Board catagories={[\"sports\", \"science\", \"music\", \"nature\"]} numQuestions={4}/>\n        <Footer />\n      </div>\n    </GameProvider>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}